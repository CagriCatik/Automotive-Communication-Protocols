"use strict";(self.webpackChunkvns=self.webpackChunkvns||[]).push([[9302],{77095:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"LIN/Kommunikation/scheduling","title":"scheduling","description":"LIN-Kommunikation in Fahrzeugen","source":"@site/docs/LIN/03_Kommunikation/03_scheduling.md","sourceDirName":"LIN/03_Kommunikation","slug":"/LIN/Kommunikation/scheduling","permalink":"/Vehicle-Network-Standards/docs/LIN/Kommunikation/scheduling","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/LIN/03_Kommunikation/03_scheduling.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"linSidebar","previous":{"title":"prozesse","permalink":"/Vehicle-Network-Standards/docs/LIN/Kommunikation/prozesse"},"next":{"title":"Botschaftsstruktur","permalink":"/Vehicle-Network-Standards/docs/LIN/Botschaftsstruktur/"}}');var s=i(74848),r=i(28453);const o={},d=void 0,a={},l=[{value:"LIN-Kommunikation in Fahrzeugen",id:"lin-kommunikation-in-fahrzeugen",level:3},{value:"Sendeschema",id:"sendeschema",level:4},{value:"Slots und Minislots",id:"slots-und-minislots",level:4},{value:"Jitter",id:"jitter",level:4},{value:"Zeitreserve",id:"zeitreserve",level:4}];function u(e){const n={h3:"h3",h4:"h4",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"lin-kommunikation-in-fahrzeugen",children:"LIN-Kommunikation in Fahrzeugen"}),"\n",(0,s.jsx)(n.h4,{id:"sendeschema",children:"Sendeschema"}),"\n",(0,s.jsx)(n.p,{children:"Im LIN-Bus-System (Local Interconnect Network) \xfcbernimmt der Master-Knoten die Regelung der gesamten Kommunikation innerhalb eines Clusters. Der Master-Knoten besitzt daher ein festgelegtes Sendeschema, das vom Systemdesigner geplant und im LIN Description File (LDF) beschrieben wird. Dieses geplante Sendeschema sorgt f\xfcr eine vorhersagbare Kommunikation im Netzwerk, da die zeitliche Abfolge der Daten\xfcbertragung festgelegt ist."}),"\n",(0,s.jsx)(n.h4,{id:"slots-und-minislots",children:"Slots und Minislots"}),"\n",(0,s.jsx)(n.p,{children:"Das Sendeschema ist in sogenannte Slots unterteilt, wobei jeder Slot f\xfcr die \xdcbertragung eines einzelnen Frames vorgesehen ist. Die Gr\xf6\xdfe dieser Slots wird durch Minislots bestimmt. Ein Minislot stellt dabei die Zeiteinheit dar, mit der die Master-Aufgabe das Sendeschema abarbeitet. Die Dauer der Minislots bildet somit die Zeitbasis f\xfcr die kontinuierliche Kommunikation im LIN-Netzwerk."}),"\n",(0,s.jsx)(n.h4,{id:"jitter",children:"Jitter"}),"\n",(0,s.jsx)(n.p,{children:"Bei der Berechnung der Slotgr\xf6\xdfe wird ein Jitter-Wert hinzugef\xfcgt. Dieser Wert repr\xe4sentiert die m\xf6gliche Zeitdifferenz zwischen dem nominalen und dem tats\xe4chlichen Beginn eines Slots. Falls ein Frame den vorgesehenen Slot nicht vollst\xe4ndig ausf\xfcllt, muss der verbleibende Zeitbereich abgewartet werden, bis der n\xe4chste Slot verf\xfcgbar ist. Dieser Wartezeitraum wird als Inter Frame Space (IFS) bezeichnet."}),"\n",(0,s.jsx)(n.h4,{id:"zeitreserve",children:"Zeitreserve"}),"\n",(0,s.jsx)(n.p,{children:"Um Kollisionen w\xe4hrend des Kommunikationsbetriebs zu vermeiden, muss der Systemdesigner sicherstellen, dass die zeitlichen Bedingungen f\xfcr alle Frames korrekt berechnet sind. Jeder Slot muss gro\xdf genug sein, um die vollst\xe4ndige \xdcbertragung der entsprechenden Frames zu gew\xe4hrleisten. Insbesondere bei der Verwendung preisg\xfcnstiger und weniger leistungsstarker Prozessoren wird den Knoten eine Zeitreserve von bis zu 40 % f\xfcr die Nachrichten\xfcbertragung einger\xe4umt. Diese Zeitreserve ist notwendig, um Schwankungen und Verz\xf6gerungen im \xdcbertragungsprozess auszugleichen."})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var t=i(96540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);